cv::Rect2d refineBrightObject(const cv::Mat& frame, const cv::Rect2d& trackerBox) {
    // Crop ROI từ tracker
    cv::Mat roiImg = frame(trackerBox).clone();

    // Chuyển sang gray
    cv::Mat gray;
    cv::cvtColor(roiImg, gray, cv::COLOR_BGR2GRAY);

    // Tìm độ sáng max trong ROI
    double minVal, maxVal;
    cv::Point minLoc, maxLoc;
    cv::minMaxLoc(gray, &minVal, &maxVal, &minLoc, &maxLoc);

    // Nếu ROI quá tối thì trả về box gốc
    if (maxVal < 30) return trackerBox;

    // Adaptive threshold (ví dụ lấy 70% max intensity)
    double threshVal = maxVal * 0.7;
    cv::Mat mask;
    cv::threshold(gray, mask, threshVal, 255, cv::THRESH_BINARY);

    // Tính moments để lấy tâm
    cv::Moments m = cv::moments(mask, true);
    if (m.m00 > 1e-3) {
        int cx = static_cast<int>(m.m10 / m.m00);
        int cy = static_cast<int>(m.m01 / m.m00);

        // Đặt ROI centered tại (cx, cy)
        int boxSize = 20; // hoặc adapt theo kích thước vùng sáng
        int x = std::max(0, cx - boxSize/2);
        int y = std::max(0, cy - boxSize/2);
        int w = std::min(boxSize, gray.cols - x);
        int h = std::min(boxSize, gray.rows - y);

        cv::Rect refined(x, y, w, h);

        // Chuyển về tọa độ global
        refined.x += trackerBox.x;
        refined.y += trackerBox.y;

        return refined;
    }

    // Nếu không detect được → giữ box gốc
    return trackerBox;
}

cv::Rect2d refineBrightObject(const cv::Mat& frame, const cv::Rect2d& trackerBox) {
    // Crop ROI từ tracker
    cv::Mat roiImg = frame(trackerBox).clone();

    // Chuyển sang gray
    cv::Mat gray;
    cv::cvtColor(roiImg, gray, cv::COLOR_BGR2GRAY);

    // Tìm độ sáng max trong ROI
    double minVal, maxVal;
    cv::Point minLoc, maxLoc;
    cv::minMaxLoc(gray, &minVal, &maxVal, &minLoc, &maxLoc);

    // Nếu ROI quá tối thì trả về box gốc
    if (maxVal < 30) return trackerBox;

    // Adaptive threshold (ví dụ lấy 70% max intensity)
    double threshVal = maxVal * 0.7;
    cv::Mat mask;
    cv::threshold(gray, mask, threshVal, 255, cv::THRESH_BINARY);

    // Tìm contour lớn nhất trong mask
    std::vector<std::vector<cv::Point>> contours;
    cv::findContours(mask, contours, cv::RETR_EXTERNAL, cv::CHAIN_APPROX_SIMPLE);

    if (!contours.empty()) {
        // chọn contour lớn nhất
        size_t maxIdx = 0;
        double maxArea = 0;
        for (size_t i = 0; i < contours.size(); i++) {
            double area = cv::contourArea(contours[i]);
            if (area > maxArea) { maxArea = area; maxIdx = i; }
        }

        // bounding box quanh contour
        cv::Rect objectBox = cv::boundingRect(contours[maxIdx]);

        // Chuyển về tọa độ global
        objectBox.x += trackerBox.x;
        objectBox.y += trackerBox.y;

        return objectBox;
    }

    // Nếu không detect được → giữ box gốc
    return trackerBox;
}
